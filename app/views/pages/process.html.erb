<!-- app/views/pages/process.html.erb -->
<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-12">
      <div class="card mb-3">
        <div class="card-header">
          <h3 class="mb-0">Результати перевірки</h3>
          <p class="text-muted mb-0">
            Файл: <strong><%= @file_data[:name] %></strong> •
            Рядків (email): <strong><%= @total %></strong>
          </p>
        </div>

        <div class="card-body">
          <% total     = (@total || 0).to_i %>
          <% valid     = (@valid_count || 0).to_i %>
          <% invalid   = (@invalid_count || 0).to_i %>
          <% processed = (@processed || 0).to_i %>
          <% unknown   = (@unknown_count || [processed - valid - invalid, 0].max).to_i %>
          <% pct = ->(count, tot) { tot <= 0 ? 0 : ((count.to_f / tot) * 100).round(1) } %>

          <!-- ===== Верхній ряд: зліва прогрес/лічильники/старт, справа textarea зі списком ===== -->
          <div class="row g-3">
            <!-- Ліва колонка -->
            <div class="col-12 col-lg-6">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="mb-3">Прогрес</h5>
                  <div class="progress mb-3">
                    <div class="progress-bar bg-success" role="progressbar"
                         id="bar-valid" style="width: <%= pct.call(valid, total) %>%;">
                      Валідні: <span id="valid-progress-count"><%= valid %></span>
                    </div>
                    <div class="progress-bar bg-danger" role="progressbar"
                         id="bar-invalid" style="width: <%= pct.call(invalid, total) %>%;">
                      Невалідні: <span id="invalid-progress-count"><%= invalid %></span>
                    </div>
                    <div class="progress-bar bg-secondary" role="progressbar"
                         id="bar-unknown" style="width: <%= pct.call(unknown, total) %>%;">
                      Невідомі: <span id="unknown-progress-count"><%= unknown %></span>
                    </div>
                  </div>

                  <ul class="list-group mb-3">
                    <li class="list-group-item d-flex justify-content-between">
                      <span>Загалом</span>
                      <strong id="total-counter"><%= total %></strong>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                      <span>Опрацьовано</span>
                      <strong id="processed-counter"><%= processed %></strong>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                      <a href="javascript:void(0)" class="text-success fw-semibold" id="show-valid" style="text-decoration:none;">Валідні</a>
                      <span class="badge bg-success rounded-pill" id="valid-badge-count"><%= valid %></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                      <a href="javascript:void(0)" class="text-danger fw-semibold" id="show-invalid" style="text-decoration:none;">Невалідні</a>
                      <span class="badge bg-danger rounded-pill" id="invalid-badge-count"><%= invalid %></span>
                    </li>
                  </ul>

                  <button class="btn btn-primary w-100" id="start-validation">Почати перевірку</button>
                </div>
              </div>
            </div>

            <!-- Права колонка з нумерацією рядків і можливістю ресайзу -->
            <div class="col-12 col-lg-6">
              <div class="card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                  <span class="fw-semibold" id="list-title">Невалідні адреси</span>
                  <div class="d-flex gap-2">
                    <button class="btn btn-sm btn-outline-secondary" id="copy-list" type="button">Скопіювати</button>
                    <button class="btn btn-sm btn-outline-primary" id="download-list" type="button">Завантажити .txt</button>
                  </div>
                </div>
                <div class="card-body">
                  <!-- Фіксована панель з ресайзом (вертикально) -->
                  <div id="list-pane" class="d-flex border rounded overflow-hidden">
                    <pre id="ln-gutter" class="mb-0 px-2 py-2 text-muted border-end">1</pre>
                    <textarea id="list-box"
                              class="form-control border-0 font-monospace"
                              rows="10"
                              readonly
                              placeholder="Тут з’явиться список валідних/невалідних адрес..."></textarea>
                  </div>
                </div>
                <div class="card-footer small text-muted">
                  Порада: натисніть «Валідні» або «Невалідні» у лівому блоці, щоб переключити цей список.
                </div>
              </div>
            </div>
          </div>

          <!-- ===== Нижній блок: таблиця деталей (з нумерацією, lazy-render + скрол) ===== -->
          <div class="mt-4">
            <div class="card">
              <div class="card-header">
                <strong>Останні результати (до 200)</strong>
              </div>
              <div class="card-body p-0">
                <div id="results-scroll" style="max-height: 650px; overflow-y: auto;">
                  <table class="table table-striped mb-0">
                    <thead class="table-light" style="position: sticky; top: 0; z-index: 1;">
                      <tr>
                        <th style="width: 4rem;">#</th>
                        <th>Email</th>
                        <th>Статус</th>
                        <th>Формат</th>
                        <th>Домен</th>
                        <th>MX</th>
                        <th>Disposable</th>
                      </tr>
                    </thead>
                    <tbody id="results-tbody">
                      <tr>
                        <td colspan="7" class="text-muted">Результатів поки немає…</td>
                      </tr>
                    </tbody>
                  </table>
                </div> <!-- /results-scroll -->
              </div>
            </div>
          </div> <!-- /таблиця -->
        </div>
      </div>
    </div>
  </div>
</div>

<!-- ===== СТИЛІ для правого блоку (фіксована висота + ресайз) ===== -->
<style>
  #list-pane {
    height: 320px;       /* дефолтна висота */
    min-height: 200px;
    max-height: 70vh;
    resize: vertical;    /* тягнемо лише вертикально */
    overflow: hidden;    /* скролиться textarea, не контейнер */
  }
  #ln-gutter, #list-box { height: 100%; }
  #ln-gutter {
    min-width: 3.2rem;
    text-align: right;
    user-select: none;
    overflow: hidden;
    line-height: 1.5;
    background: #f8f9fa;
  }
  #list-box {
    resize: none;        /* розмір контролює #list-pane */
    line-height: 1.5;
  }
</style>

<script>
  // Анімація початкових барів
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".progress-bar").forEach(bar => {
      const width = bar.style.width;
      bar.style.width = "0";
      setTimeout(() => { bar.style.width = width; }, 250);
    });
  });
</script>

<script>
  const emails   = <%= raw @emails.to_json %>;
  const csrf     = document.querySelector('meta[name="csrf-token"]')?.content || '';

  // Лічильники (заголовки)
  const totalEl      = document.getElementById('total-counter');
  const processedEl  = document.getElementById('processed-counter');

  // Прогрес-бар сегменти і їхні лічильники
  const barValid      = document.getElementById('bar-valid');
  const barInvalid    = document.getElementById('bar-invalid');
  const barUnknown    = document.getElementById('bar-unknown');
  const validProgEl   = document.getElementById('valid-progress-count');
  const invalidProgEl = document.getElementById('invalid-progress-count');
  const unknownProgEl = document.getElementById('unknown-progress-count');

  // Бейджі у списку зліва
  const validBadgeEl   = document.getElementById('valid-badge-count');
  const invalidBadgeEl = document.getElementById('invalid-badge-count');

  // Таблиця з lazy-render
  const tableBody     = document.getElementById('results-tbody');
  const resultsScroll = document.getElementById('results-scroll');

  // Кнопка старту
  const startBtn  = document.getElementById('start-validation');

  // Правий список + гуттер нумерації + панель
  const listPane      = document.getElementById('list-pane');
  const listTitleEl   = document.getElementById('list-title');
  const listBoxEl     = document.getElementById('list-box');
  const gutterEl      = document.getElementById('ln-gutter');
  const copyBtn       = document.getElementById('copy-list');
  const downloadBtn   = document.getElementById('download-list');
  const showValidBtn  = document.getElementById('show-valid');
  const showInvalidBtn= document.getElementById('show-invalid');

  // Буфери повних списків із бекенду
  let validList = [];
  let invalidList = [];

  // Який список зараз відображається у правому блоці: 'invalid' | 'valid'
  let currentListMode = 'invalid';

  // Для lazy-рендеру таблиці
  let latestResults = [];
  let renderedCount = 0;
  const PAGE_SIZE = 50;

  let jobId = null;
  let timer = null;

  function pct(count, total) {
    total = parseInt(total || 0, 10);
    count = parseInt(count || 0, 10);
    if (total <= 0) return 0;
    return Math.round((count / total) * 100);
  }

  // Розмір правої панелі — підганяємо висоту textarea і gutter
  function sizeListPane() {
    if (!listPane) return;
    const h = listPane.clientHeight;
    listBoxEl.style.height = h + 'px';
    gutterEl.style.height  = h + 'px';
    gutterEl.scrollTop = listBoxEl.scrollTop; // синхрон скролу після зміни висоти
  }

  if (window.ResizeObserver && listPane) {
    const ro = new ResizeObserver(sizeListPane);
    ro.observe(listPane);
  } else {
    window.addEventListener('resize', sizeListPane);
  }
  document.addEventListener('DOMContentLoaded', sizeListPane);

  // Допоміжне: оновити гуттер нумерації під контент textarea
  function refreshGutter() {
    const lines = (listBoxEl.value || '').split('\n').length || 1;
    let out = '';
    for (let i = 1; i <= lines; i++) out += i + '\n';
    gutterEl.textContent = out.trimEnd() || '1';
    gutterEl.scrollTop = listBoxEl.scrollTop;
  }

  // Синхронізація скролу textarea -> гуттер
  listBoxEl.addEventListener('scroll', () => {
    gutterEl.scrollTop = listBoxEl.scrollTop;
  });

  // Перемикання режиму правого списку
  function setListMode(mode) {
    currentListMode = mode;
    if (mode === 'valid') {
      listTitleEl.textContent = 'Валідні адреси';
      listBoxEl.value = (validList || []).join('\n');
    } else {
      listTitleEl.textContent = 'Невалідні адреси';
      listBoxEl.value = (invalidList || []).join('\n');
    }
    refreshGutter();
    sizeListPane();
  }

  // Рендер наступної порції рядків у таблицю
  function renderMoreRows(n = PAGE_SIZE) {
    if (!Array.isArray(latestResults) || !tableBody) return;
    const end = Math.min(renderedCount + n, latestResults.length);

    // якщо перший раз — очистити placeholder
    if (renderedCount === 0) {
      tableBody.innerHTML = '';
    }

    for (let i = renderedCount; i < end; i++) {
      const r = latestResults[i];
      const idx = i + 1; // нумерація від 1
      const mxCell = (r.mx_records === true) ? '✓'
                 : (r.mx_records === false) ? '✗'
                 : '—';
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${idx}</td>
        <td>${escapeHtml(r.email || '')}</td>
        <td>${r.valid ? '<span class="badge bg-success">✅ Валідний</span>'
                       : '<span class="badge bg-danger">❌ Невалідний</span>'}</td>
        <td>${r.valid_format ? '✓' : '✗'}</td>
        <td>${escapeHtml(r.domain || '—')}</td>
        <td>${mxCell}</td>
        <td>${r.disposable ? '✓' : '✗'}</td>`;
      tableBody.appendChild(tr);
    }

    renderedCount = end;

    // Якщо взагалі нема результатів
    if (latestResults.length === 0) {
      tableBody.innerHTML = '<tr><td colspan="7" class="text-muted">Результатів поки немає…</td></tr>';
    }
  }

  // Infinite scroll: підвантажуємо наступні 50 при прокрутці до низу
  resultsScroll?.addEventListener('scroll', () => {
    const nearBottom = resultsScroll.scrollTop + resultsScroll.clientHeight >= resultsScroll.scrollHeight - 24;
    if (nearBottom && renderedCount < latestResults.length) {
      renderMoreRows(PAGE_SIZE);
    }
  });

  // Старт перевірки
  startBtn?.addEventListener('click', async () => {
    startBtn.disabled = true;
    startBtn.textContent = 'Запускаю...';

    try {
      const resp = await fetch('<%= bulk_validate_emails_path %>', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json', 'X-CSRF-Token': csrf, 'Accept': 'application/json' },
        body: JSON.stringify({ emails })
      });
      const data = await resp.json();
      if (!data.success) throw new Error(data.error || 'Не вдалося запустити перевірку');

      jobId = data.job_id;

      // нульовий прогрес + дефолт — показуємо невалідні
      updateUI({ total: emails.length, processed: 0, valid: 0, invalid: 0, results: [], valid_list: [], invalid_list: [] });
      setListMode('invalid');

      timer = setInterval(fetchProgress, 700);
    } catch (e) {
      alert('Помилка: ' + e.message);
      startBtn.disabled = false;
      startBtn.textContent = 'Почати перевірку';
    }
  });

  async function fetchProgress() {
    try {
      const url = '<%= progress_emails_path %>?job_id=' + encodeURIComponent(jobId);
      const data = await fetch(url, { headers: { 'Accept': 'application/json' } }).then(r => r.json());
      if (!data.success) return;

      updateUI(data);

      if (data.done) {
        clearInterval(timer);
        startBtn.textContent = 'Повторити перевірку';
        startBtn.disabled = false;
      }
    } catch (_) {}
  }

  function updateUI(state) {
    const total     = state.total || emails.length;
    const processed = state.processed || 0;
    const valid     = state.valid || 0;
    const invalid   = state.invalid || 0;
    const unknown   = Math.max(0, processed - valid - invalid);

    // Заголовні лічильники
    if (totalEl)     totalEl.textContent = total;
    if (processedEl) processedEl.textContent = processed;

    // Прогрес-бар + числа всередині сегментів
    if (barValid)   barValid.style.width   = pct(valid, total) + '%';
    if (barInvalid) barInvalid.style.width = pct(invalid, total) + '%';
    if (barUnknown) barUnknown.style.width = pct(unknown, total) + '%';

    if (validProgEl)   validProgEl.textContent   = valid;
    if (invalidProgEl) invalidProgEl.textContent = invalid;
    if (unknownProgEl) unknownProgEl.textContent = unknown;

    if (validBadgeEl)   validBadgeEl.textContent   = valid;
    if (invalidBadgeEl) invalidBadgeEl.textContent = invalid;

    // Оновити повні списки (для правого блоку)
    validList   = Array.isArray(state.valid_list)   ? state.valid_list   : [];
    invalidList = Array.isArray(state.invalid_list) ? state.invalid_list : [];

    // Підтримати поточний режим праворуч
    setListMode(currentListMode);

    // Таблиця: зберегти результати та відрендерити перші 50
    latestResults = Array.isArray(state.results) ? state.results : [];
    renderedCount = 0;
    if (tableBody) tableBody.innerHTML = ''; // очистити
    renderMoreRows(PAGE_SIZE);
  }

  // Перемикачі списку праворуч
  document.getElementById('show-valid')?.addEventListener('click', () => setListMode('valid'));
  document.getElementById('show-invalid')?.addEventListener('click', () => setListMode('invalid'));

  // Копіювання
  copyBtn?.addEventListener('click', async () => {
    try {
      await navigator.clipboard.writeText(listBoxEl.value || '');
      copyBtn.textContent = 'Скопійовано!';
      setTimeout(() => (copyBtn.textContent = 'Скопіювати'), 1200);
    } catch (_) {
      listBoxEl.select();
      document.execCommand('copy');
    }
  });

  // Завантаження
  downloadBtn?.addEventListener('click', () => {
    const isInvalid = currentListMode === 'invalid';
    const filename  = (isInvalid ? 'invalid' : 'valid') + `_emails_${new Date().toISOString().slice(0,19).replace(/[:T]/g,'-')}.txt`;
    const blob = new Blob([listBoxEl.value || ''], { type: 'text/plain;charset=utf-8' });
    const url  = URL.createObjectURL(blob);
    const a    = document.createElement('a');
    a.href = url;
    a.download = filename;
    document.body.appendChild(a);
    a.click();
    a.remove();
    URL.revokeObjectURL(url);
  });

  function escapeHtml(s) {
    return (s || '').replace(/[&<>"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#039;'}[m]));
  }
</script>
